{"version":3,"file":"index.js","sources":["src/index.mjs"],"sourcesContent":["import React, { useState } from \"react\";\n\nexport default function Search({\n  data = [],\n  fields = [],\n  bg = \"#dedede\",\n  text = \"black\",\n}) {\n  // const [filteredByFields, setFilteredByFields] = useState([]);\n  // const [filtered, setFiltered] = useState([]);\n  const [searchField, setSearchField] = useState(\"\");\n\n  // useEffect(() => {\n  //   filterDataByFields();\n  // }, []);\n\n  const handleChange = (e) => {\n    setSearchField(e.target.value);\n    console.log(e.target.value);\n  };\n\n  // useEffect(() => {\n  //   filterDataBySearchField(filteredByFields, searchField);\n  // }, [filteredByFields, searchField]);\n\n  const handleKeyUp = (e) => {\n    if (e.key === \"Escape\") {\n      // setSearchField(\"\");\n      console.log(\"Escape\");\n    } else if (e.key === \"Enter\") {\n      console.log(\"Enter\");\n    }\n  };\n\n  // const filterDataByFields = () => {\n  //   let res = data.map((item) => {\n  //     return fields.reduce((acc, field) => {\n  //       acc[field] = item[field];\n  //       return acc;\n  //     }, {});\n  //   });\n\n  //   setFilteredByFields(res);\n  // };\n\n  // const filterDataBySearchField = (data, field) => {\n  //   let res = data.filter((item) => {\n  //     return Object.values(item).some((value) => {\n  //       if (typeof value === \"string\") {\n  //         return value.toLowerCase().includes(field.toLowerCase());\n  //       }\n  //       return false;\n  //     });\n  //   });\n\n  //   setFiltered(res);\n  // };\n\n  return (\n    <div>\n      <input\n        placeholder=\"Search...\"\n        style={{ width: \"100vw\", padding: \"10px\" }}\n        onChange={handleChange}\n        value={searchField}\n        onKeyUp={handleKeyUp}\n      />\n      {/* <div>\n        <table style={{ width: \"100vw\" }}>\n          <thead>\n            <tr style={{ background: bg, color: text }}>\n              {fields.length &&\n                fields.map((f, i) => {\n                  return <th key={i}>{f}</th>;\n                })}\n            </tr>\n          </thead>\n          <tbody>\n            {filtered.length &&\n              filtered.map((d, i) => {\n                return (\n                  <tr key={i}>\n                    {fields.length &&\n                      fields.map((f, i) => {\n                        return <td key={i}>{d[f]}</td>;\n                      })}\n                  </tr>\n                );\n              })}\n          </tbody>\n        </table>\n      </div> */}\n    </div>\n  );\n}\n"],"names":["Search","_ref","data","fields","bg","text","_useState2","_slicedToArray","useState","searchField","setSearchField","React","createElement","placeholder","style","width","padding","onChange","e","target","value","console","log","onKeyUp","key"],"mappings":"mkCAEe,SAASA,EAAMC,GAK3BA,EAJDC,KAASD,EACTE,OAAWF,EACXG,GAAcH,EACdI,KAIA,IAAkDC,EAAAC,EAAZC,EAAS,IAAG,GAA3CC,EAAWH,EAAA,GAAEI,EAAcJ,EAAA,GAgDlC,OACEK,EAAAC,cACED,MAAAA,KAAAA,EAAAC,cAAA,QAAA,CACEC,YAAY,YACZC,MAAO,CAAEC,MAAO,QAASC,QAAS,QAClCC,SA/Ce,SAACC,GACpBR,EAAeQ,EAAEC,OAAOC,OACxBC,QAAQC,IAAIJ,EAAEC,OAAOC,QA8CjBA,MAAOX,EACPc,QAxCc,SAACL,GACL,WAAVA,EAAEM,IAEJH,QAAQC,IAAI,UACO,UAAVJ,EAAEM,KACXH,QAAQC,IAAI,YAgElB"}